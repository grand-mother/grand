; Sample configuration file
; general section must contain a provider value. Files you will register in the database will be identified as provided by user "provider" (should be your name).
[general]
provider = "Fleg"
socket_timeout = 5

;Local directories where data should be found.
;If data is not found in local directories but found in a repository,
; it will be copied in the first localdir of the list (e.g. .incoming).
; At least one localdir (incoming) is needed.
; incoming directory must be an absolute path
[directories]
localdir = ["/home/fleg/DEV/GRAND/incoming", "/home/fleg/DEV/GRAND/grand/granddb/incoming/"]

; remote repositories to search for data if not present in local directories
; repositories are given as list :
; Name = [protocol, server, port, [paths]]
; where protocol is one of the supported protocols :  local, ssh, http, https
; server and port are the server name and port to access the datas using the defined protocol
; and [paths] is a list of paths to search in the repository
; If credentials are required to access the repository, they should be given in the [credential] section using the same name
; repository CCIN2P3 is already defined in the database (so it's not necessary to define it here), but credentials for it have
; to be supplied in the [credentials] section below
[repositories]
CC = ["ssh","cca.in2p3.fr",22,["/sps/trend/pengxiong/GP81_interpolation/GP81_1000m/SignalTimeSeries/","/sps/trend/pengxiong/Proton_ROOT/","/sps/trend/fleg/INCOMING"]]
WEB = [ "https", "github.com" , 443, ["/grand-mother/data_challenge1/raw/main/coarse_subei_traces_root/"]]

; Credentials for repositories given as :
; Name =  [user, password, keyfile, keypasswd]
; where name is the name of the repository
; For security reasons it is highly recommended NOT to provide any sensitive information as password keyfile or keypasswd
; in this file. For example, if protocol is ssh, it's better to use an ssh-agent
; To run an ssh-agent just do : eval $(ssh-agent) and ssh-add .ssh/id_rsa
; To export your ssh agent from host to docker simply add an environment variable SSH_AUTH_SOCK=/ssh-agent to your docker
; and mount the volume ${SSH_AUTH_SOCK}:/ssh-agent
[credentials]
CC = ["legrand","","",""]
CCIN2P3 = ["legrand","","",""]
SSHTUNNEL = ["fleg","","",""]

; database to use (only one database can be defined)
; Name = [server, port, database, login, passwd, sshtunnel_server, sshtunnel_port, sshtunnel_credentials ]
[database]
#database = ["lpndocker01.in2p3.fr", "" ,"granddb", "postgres", "password","", 22, ""]
database = ["lpndocker01.in2p3.fr", "" ,"granddb", "postgres", "password","lpnclaude.in2p3.fr", 22, "SSHTUNNEL"]

; The following section is optional.
; it defines the repository where registered files need to go.
; repository_name = "path"
; if not provided, the files will go to the incoming section provided in section directories
; Useful only if you want to work on "localdir" but register files in a remote directory
[registerer]
CCIN2P3 = "/sps/trend/fleg/INCOMING"
